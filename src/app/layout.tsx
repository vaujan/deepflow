import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "../contexts/ThemeContext";
import { SidebarProvider } from "../contexts/SidebarContext";
import { WidgetProvider } from "../contexts/WidgetContext";
import { FontProvider } from "../contexts/FontContext";
import { SpeedInsights } from "@vercel/speed-insights/next";
import { ThemeLoadingWrapper } from "../components/ui/theme-loading-wrapper";

const inter = Inter({
	variable: "--font-inter",
	subsets: ["latin"],
});

export const metadata: Metadata = {
	title: "hello world",
	description: "Generated by create next app",
};

export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	return (
		<html lang="en">
			<body className={`${inter.variable} font-sans antialiased`}>
				{/* Theme initialization script to prevent FOUC */}
				<script
					dangerouslySetInnerHTML={{
						__html: `
							(function() {
								try {
									const theme = localStorage.getItem('theme') || 'dark';
									document.documentElement.setAttribute('data-theme', theme);
									if (theme === 'dark') {
										document.documentElement.classList.add('dark', 'dark-theme');
										document.documentElement.classList.remove('light', 'light-theme');
									} else {
										document.documentElement.classList.add('light', 'light-theme');
										document.documentElement.classList.remove('dark', 'dark-theme');
									}
								} catch (e) {
									// Fallback to dark theme
									document.documentElement.setAttribute('data-theme', 'dark');
									document.documentElement.classList.add('dark', 'dark-theme');
									document.documentElement.classList.remove('light', 'light-theme');
								}
							})();
						`,
					}}
				/>
				<ThemeProvider>
					<ThemeLoadingWrapper>
						<FontProvider>
							<SidebarProvider>
								<WidgetProvider>
									{children}
									<SpeedInsights />
								</WidgetProvider>
							</SidebarProvider>
						</FontProvider>
					</ThemeLoadingWrapper>
				</ThemeProvider>
			</body>
		</html>
	);
}
